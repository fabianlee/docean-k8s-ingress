---
kind: Namespace
apiVersion: v1
metadata:
  name: istio-system
---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio-control-plane
  namespace: istio-system

spec:
  profile: default
  revision: "{{ istio_version | replace('.','-') }}"

  # avoid rate limit on docker hub for istio envoy proxy
  values:
    global:
      # will fail unless on GKE or have pull secret
      #hub: grc.io/istio-release

  addonComponents:
    pilot:
      enabled: true

  components:
    ingressGateways:
      - namespace: istio-system
        name: istio-ingressgateway
        enabled: true
        k8s:
          hpaSpec:
            minReplicas: 1
            maxReplicas: 1
            
          service:
            ports:
            - name: status-port
              port: 15021
              protocol: TCP
              targetPort: 15021
            - name: http2
              nodePort: 32600
              port: 80
              protocol: TCP
              targetPort: 8080
            - name: https
              nodePort: {{istio_ingressgateway_nodeport}}
              port: 443
              protocol: TCP
              targetPort: 8443
            - name: tcp
              port: 31400
              protocol: TCP
              targetPort: 31400
            - name: tls
              port: 15443
              protocol: TCP
              targetPort: 15443

          overlays:
            - kind: Service
              name: istio-ingressgateway
              patches:
#                - path: spec.loadBalancerIP
#                  value: 10.152.183.213
                # needs to match MetalLB endpoint
                - path: spec.loadBalancerSourceRanges
                  value: [ 10.0.0.0/8, 192.0.0.0/8 ]


      # secondary, independent ingress
      - namespace: istio-system
        name: {{istio_ingressgateway_secondary_name}}
        enabled: true
        k8s:
          hpaSpec:
            minReplicas: 1
            maxReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: {{istio_ingressgateway_secondary_name}}

          # these overlayed values are necessary to create an independent ingressgateway
          # if they are not provided explicitly, you end up with crossover
          # the other way to get an independent secondary ingress is to use helm
          overlays:
            - kind: HorizontalPodAutoscaler
              name: {{istio_ingressgateway_secondary_name}}
              patches:
                - path: metadata.labels.app
                  value: {{istio_ingressgateway_secondary_name}}
                - path: metadata.labels.istio
                  value: {{istio_ingressgateway_secondary_selector}}
                - path: spec.scaleTargetRef.name
                  value: {{istio_ingressgateway_secondary_name}}
            - kind: Deployment
              name: {{istio_ingressgateway_secondary_name}}
              patches:
                - path: metadata.labels.app
                  value: {{istio_ingressgateway_secondary_name}}
                - path: metadata.labels.istio
                  value: {{istio_ingressgateway_secondary_selector}}
                - path: spec.selector.matchLabels.app
                  value: {{istio_ingressgateway_secondary_name}}
                - path: spec.selector.matchLabels.istio
                  value: {{istio_ingressgateway_secondary_selector}}
                - path: spec.template.metadata.labels.app
                  value: {{istio_ingressgateway_secondary_name}}
                - path: spec.template.metadata.labels.istio
                  value: {{istio_ingressgateway_secondary_selector}}
            - kind: Service
              name: {{istio_ingressgateway_secondary_name}}
              patches:
                - path: metadata.labels.app
                  value: {{istio_ingressgateway_secondary_name}}
                - path: metadata.labels.istio
                  value: {{istio_ingressgateway_secondary_selector}}
                - path: spec.selector.app
                  value: {{istio_ingressgateway_secondary_name}}
                - path: spec.selector.istio
                  value: {{istio_ingressgateway_secondary_selector}}
                # needs to match MetalLB endpoint
                - path: spec.loadBalancerSourceRanges
                  value: [ 10.0.0.0/8, 192.0.0.0/8 ]

            
          service:
            ports:
            - name: status-port
              port: 15021
              protocol: TCP
              targetPort: 15021
            - name: http2
              nodePort: 32700
              port: 80
              protocol: TCP
              targetPort: 8080
            - name: https
              nodePort: {{istio_ingressgateway_nodeport_secondary}}
              port: 443
              protocol: TCP
              targetPort: 8443
            - name: tcp
              port: 31400
              protocol: TCP
              targetPort: 31400
            - name: tls
              port: 15443
              protocol: TCP
              targetPort: 15443
